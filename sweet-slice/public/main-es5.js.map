{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/checkout/checkout.component.ts","webpack:///src/app/checkout/checkout.component.html","webpack:///src/app/ingredient/ingredient.component.ts","webpack:///src/app/ingredient/ingredient.component.html","webpack:///src/app/my-server.service.ts","webpack:///src/app/pizza-maker/pizza-maker.component.ts","webpack:///src/app/pizza-maker/pizza-maker.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CheckoutComponent","IngredientComponent","myServer","http","myPath","ingredients","get","responseType","subscribe","data","console","log","err","typeName","property","providedIn","PizzaMakerComponent","server","getAllIngredients","environment","production","bootstrapModule","catch","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PizzaMakerComponent } from './pizza-maker/pizza-maker.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'checkout',\n    component: CheckoutComponent\n  \n  },\n  {\n    path: '**',\n    component: PizzaMakerComponent\n  \n  }\n  ];\n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sweet-slice';\n}\n","<<<<<<< HEAD\n<a [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\"><h1>Sweet Slice</h1></a>\n<a [routerLink]=\"['/checkout']\" routerLinkActive=\"router-link-active\"><h2>Checkout</h2></a>\n\n=======\n>>>>>>> 4ed3da125da91c25e3f46d37367f201c7c46f582\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { PizzaMakerComponent } from './pizza-maker/pizza-maker.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IngredientComponent,\n    PizzaMakerComponent,\n    CheckoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>checkout works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.css']\n})\nexport class IngredientComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ingredient works!</p>\n<div class=\"ingredient\">\n    <p>Name</p>\n    <p>Type</p>\n    <p>Price</p>\n</div>\n\n<button>Select</button>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class myServer {\n\n  constructor(private http: HttpClient) { }\n\n  myPath = 'http://localhost:3000/ingredients';\n\n  //returns an array of all defined ingredients as objects. \n  getAllIngredients() {\n    let ingredients = [];\n    this.http\n      .get(`${this.myPath}/all`,\n        { responseType: \"json\" }\n      ).subscribe(\n        (data: any) => {\n          console.log(data);\n          ingredients = data;\n        },\n        err => console.log('Error: ', err),\n        () => { return ingredients; });\n  }\n\n  //returns an array of all IDs currently in use. \n  getAllIDs() {\n    return this.http\n      .get(`${this.myPath}/ids`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all types currently in use. \n  getAllTypes() {\n    return this.http\n      .get(`${this.myPath}/types/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all names currently in use.\n  getAllNames() {\n    return this.http\n      .get(`${this.myPath}/names/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all ingredients with the given type, as objects.\n  getAllOfType(typeName: string) {\n    return this.http\n      .get(`${this.myPath}/types/${typeName}/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns the selected property (\"name\", \"type\", or \"cost\") of the ingredient with the ID provided\n  getIngredientProperty(id: string, property: string) {\n    return this.http\n      .get(`${this.myPath}/${id}/${property}`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns all the costs. \n  getCosts() {\n    return this.http\n      .get(`${this.myPath}/costs/all`,\n        { responseType: \"json\" }\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { myServer } from '../my-server.service';\n//4ed3da125da91c25e3f46d37367f201c7c46f582\n\n@Component({\n  selector: 'app-pizza-maker',\n  templateUrl: './pizza-maker.component.html',\n  styleUrls: ['./pizza-maker.component.css']\n})\nexport class PizzaMakerComponent implements OnInit {\n\n  constructor(private server: myServer) { }\n\n  ngOnInit(): void {\n    this.server.getAllIngredients();\n  }\n\n}\n//initialize the array getting the items from the service  \n\n// Setting pizza service to pizza array to ngfor through\n\n// export class PuppyListComponent implements OnInit {\n//   puppies : IPuppy[];\n//   constructor(public service : PuppyFinderService) { }\n\n\n//   ngOnInit(): void {\n//     this.puppies = this.service.getPuppy();\n//   }\n\n// }\n"," <!-- <app-ingredient *ngFor=\"let ingredient of ingredients\" [ingredient]=\"ingredient\">\n\n </app-ingredient> -->\n\n  <section>\n    <h2>Crust</h2>\n    <div class=\"crust-container\"></div>\n    <app-ingredient></app-ingredient>\n\n    <h2>Frosting</h2>\n    <div class=\"frosting-container\"></div>\n    <app-ingredient></app-ingredient>\n\n    \n    <h2>Topping</h2>\n    <div class=\"topping-container\"></div>    \n    <app-ingredient></app-ingredient>\n\n  </section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}