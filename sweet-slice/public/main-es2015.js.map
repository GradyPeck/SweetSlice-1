{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/ingredient/ingredient.component.ts","./src/app/ingredient/ingredient.component.html","./src/app/my-server.service.ts","./src/app/pizza-maker/pizza-maker.component.ts","./src/app/pizza-maker/pizza-maker.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PizzaMakerComponent } from './pizza-maker/pizza-maker.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'checkout',\n    component: CheckoutComponent\n  \n  },\n  {\n    path: '**',\n    component: PizzaMakerComponent\n  \n  }\n  ];\n  \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sweet-slice';\n}\n","<<<<<<< HEAD\n<a [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\"><h1>Sweet Slice</h1></a>\n<a [routerLink]=\"['/checkout']\" routerLinkActive=\"router-link-active\"><h2>Checkout</h2></a>\n\n=======\n>>>>>>> 4ed3da125da91c25e3f46d37367f201c7c46f582\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { PizzaMakerComponent } from './pizza-maker/pizza-maker.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IngredientComponent,\n    PizzaMakerComponent,\n    CheckoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>checkout works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.css']\n})\nexport class IngredientComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ingredient works!</p>\n<div class=\"ingredient\">\n    <p>Name</p>\n    <p>Type</p>\n    <p>Price</p>\n</div>\n\n<button>Select</button>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class myServer {\n\n  constructor(private http: HttpClient) { }\n\n  myPath = 'http://localhost:3000/ingredients';\n\n  //returns an array of all defined ingredients as objects. \n  getAllIngredients() {\n    let ingredients = [];\n    this.http\n      .get(`${this.myPath}/all`,\n        { responseType: \"json\" }\n      ).subscribe(\n        (data: any) => {\n          console.log(data);\n          ingredients = data;\n        },\n        err => console.log('Error: ', err),\n        () => { return ingredients; });\n  }\n\n  //returns an array of all IDs currently in use. \n  getAllIDs() {\n    return this.http\n      .get(`${this.myPath}/ids`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all types currently in use. \n  getAllTypes() {\n    return this.http\n      .get(`${this.myPath}/types/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all names currently in use.\n  getAllNames() {\n    return this.http\n      .get(`${this.myPath}/names/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all ingredients with the given type, as objects.\n  getAllOfType(typeName: string) {\n    return this.http\n      .get(`${this.myPath}/types/${typeName}/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns the selected property (\"name\", \"type\", or \"cost\") of the ingredient with the ID provided\n  getIngredientProperty(id: string, property: string) {\n    return this.http\n      .get(`${this.myPath}/${id}/${property}`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns all the costs. \n  getCosts() {\n    return this.http\n      .get(`${this.myPath}/costs/all`,\n        { responseType: \"json\" }\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { myServer } from '../my-server.service';\n//4ed3da125da91c25e3f46d37367f201c7c46f582\n\n@Component({\n  selector: 'app-pizza-maker',\n  templateUrl: './pizza-maker.component.html',\n  styleUrls: ['./pizza-maker.component.css']\n})\nexport class PizzaMakerComponent implements OnInit {\n\n  constructor(private server: myServer) { }\n\n  ngOnInit(): void {\n    this.server.getAllIngredients();\n  }\n\n}\n//initialize the array getting the items from the service  \n\n// Setting pizza service to pizza array to ngfor through\n\n// export class PuppyListComponent implements OnInit {\n//   puppies : IPuppy[];\n//   constructor(public service : PuppyFinderService) { }\n\n\n//   ngOnInit(): void {\n//     this.puppies = this.service.getPuppy();\n//   }\n\n// }\n"," <!-- <app-ingredient *ngFor=\"let ingredient of ingredients\" [ingredient]=\"ingredient\">\n\n </app-ingredient> -->\n\n  <section>\n    <h2>Crust</h2>\n    <div class=\"crust-container\"></div>\n    <app-ingredient></app-ingredient>\n\n    <h2>Frosting</h2>\n    <div class=\"frosting-container\"></div>\n    <app-ingredient></app-ingredient>\n\n    \n    <h2>Topping</h2>\n    <div class=\"topping-container\"></div>    \n    <app-ingredient></app-ingredient>\n\n  </section>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}