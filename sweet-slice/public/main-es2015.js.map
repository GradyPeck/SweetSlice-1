{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/checkout/checkout.component.ts","./src/app/checkout/checkout.component.html","./src/app/classes.ts","./src/app/ingredient/ingredient.component.ts","./src/app/ingredient/ingredient.component.html","./src/app/my-cart.service.ts","./src/app/my-server.service.ts","./src/app/pizza-maker/pizza-maker.component.ts","./src/app/pizza-maker/pizza-maker.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PizzaMakerComponent } from './pizza-maker/pizza-maker.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\n\nconst routes: Routes = [\n  // {\n  //   path: '**',\n  //   component: AppComponent\n  // },\n  {\n    path: 'pizzamaker',\n    component: PizzaMakerComponent\n  },\n  {\n    path: 'checkout',\n    component: CheckoutComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sweet-slice';\n}\n","<a [routerLink]=\"['**']\" routerLinkActive=\"router-link-active\"><h1>Sweet Slice</h1></a>\n<a [routerLink]=\"['/pizzamaker']\" routerLinkActive=\"router-link-active\">Make a Pizza</a>\n<a [routerLink]=\"['/checkout']\" routerLinkActive=\"router-link-active\"><button>Go To Checkout</button></a>\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IngredientComponent } from './ingredient/ingredient.component';\nimport { PizzaMakerComponent } from './pizza-maker/pizza-maker.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IngredientComponent,\n    PizzaMakerComponent,\n    CheckoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { IPizza } from '../interfaces'\nimport { MyCartService } from '../my-cart.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n  cart : IPizza[];\n\n  constructor(public service : MyCartService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Checkout</h1>\n\n<div class=\"pizza-container\">\n    <div>\n        <h2>Your Order</h2>\n        <p>Total</p>\n    </div>\n    <div>\n        <p>Crust:</p>\n        <p>Frosting:</p>\n        <p>Toppings:</p>\n    </div>\n</div>\n\n<div class=\"order-total\">\n    <p>Subtotal:</p>\n    <p>Tax:</p>\n    <p>Tip:</p>\n<h2>Order Total:</h2>\n</div>","import { IPizza, IIngredient } from \"./interfaces\";\n\nexport class Ingredient implements IIngredient {\n    id: string = '';\n    name: string = '';\n    type: string = '';\n    cost: number = -1;\n    selected?: boolean = false;\n\n    constructor(baseIngredient?: IIngredient, isSelected: boolean = false) {\n        this.id = baseIngredient.id;\n        this.name = baseIngredient.name;\n        this.type = baseIngredient.type;\n        this.cost = baseIngredient.cost;\n        this.selected = isSelected;\n    }\n\n    convertToInterface(): IIngredient {\n        return {\n            id: this.id,\n            name: this.name,\n            type: this.type,\n            cost: this.cost\n        }\n    }\n}\n\nexport class Pizza implements IPizza {\n    toppings: IIngredient[] = [];\n    frosting: IIngredient = new Ingredient();\n    crust: IIngredient = new Ingredient();\n\n    constructor() {\n    }\n\n    addToPizza(newIngredient: IIngredient) {\n        switch (newIngredient.type.toLowerCase()) {\n            case 'topping':\n                this.toppings.push(newIngredient);\n                break;\n            case 'frosting':\n                this.frosting = newIngredient;\n                break;\n            case 'crust':\n                this.crust = newIngredient;\n                break;\n        }\n    }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { IIngredient } from '../interfaces';\n\n@Component({\n  selector: 'app-ingredient',\n  templateUrl: './ingredient.component.html',\n  styleUrls: ['./ingredient.component.css']\n})\nexport class IngredientComponent implements OnInit {\n  @Input() ingredient : IIngredient; \n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>ingredient works!</p>\n<div class=\"ingredient\">\n    <p>Name</p>\n    <p>Type</p>\n    <p>Price</p>\n</div>\n\n<button>Select</button>","import { Injectable } from '@angular/core';\nimport { IPizza, IIngredient } from './interfaces';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MyCartService {\n\n  constructor() { }\n\n  cart: IPizza[] = [];\n\n  //creates a new pizza and adds it to the cart. Takes ingredients in the order crust, frosting, topping, topping, etc. \n  addPizza(myCrust: IIngredient, myFrosting: IIngredient, myToppings: IIngredient[]) {\n    this.cart.push(\n      {\n        crust: myCrust,\n        frosting: myFrosting,\n        toppings: myToppings\n      });\n    console.log('Current cart: ', this.cart);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class myServer {\n\n  constructor(private http: HttpClient) { }\n\n  myPath = 'http://localhost:3000/ingredients';\n\n  //returns an array of all defined ingredients as objects. \n  getAllIngredients() {\n    \n    return this.http.get(`${this.myPath}/all`, { responseType: \"json\" });\n    // Code for attempting to return an array\n      // let ingredients = [];\n      // ).subscribe(\n      //   (data: any) => {\n      //     console.log(data);\n      //     ingredients = data;\n      //   },\n      //   err => console.log('Error: ', err),\n      //   () => { return ingredients; });\n  }\n\n  //returns an array of all IDs currently in use. \n  getAllIDs() {\n    return this.http\n      .get(`${this.myPath}/ids`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all types currently in use. \n  getAllTypes() {\n    return this.http\n      .get(`${this.myPath}/types/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all names currently in use.\n  getAllNames() {\n    return this.http\n      .get(`${this.myPath}/names/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns an array of all ingredients with the given type, as objects.\n  getAllOfType(typeName: string) {\n    return this.http\n      .get(`${this.myPath}/types/${typeName}/all`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns the selected property (\"name\", \"type\", or \"cost\") of the ingredient with the ID provided\n  getIngredientProperty(id: string, property: string) {\n    return this.http\n      .get(`${this.myPath}/${id}/${property}`,\n        { responseType: \"json\" }\n      );\n  }\n\n  //returns all the costs. \n  getCosts() {\n    return this.http\n      .get(`${this.myPath}/costs/all`,\n        { responseType: \"json\" }\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { myServer } from '../my-server.service';\nimport { IIngredient, IPizza } from '../interfaces';\nimport { Ingredient, Pizza } from '../classes';\nimport { MyCartService } from '../my-cart.service';\n\n@Component({\n  selector: 'app-pizza-maker',\n  templateUrl: './pizza-maker.component.html',\n  styleUrls: ['./pizza-maker.component.css']\n})\nexport class PizzaMakerComponent implements OnInit {\n  _toppings: Ingredient[] = [];\n  _frostings: Ingredient[] = [];\n  _crusts: Ingredient[] = [];\n  _types: string[] = [];\n\n  selectedFrosting: Ingredient;\n  selectedCrust: Ingredient;\n\n  constructor(private server: myServer, private cart: MyCartService) {\n    // Getting all the different type names\n    this.server.getAllTypes().subscribe((data: string[]) => this._types = data);\n    // Getting ingredients by each type so filtering isn't needed later\n    this.server.getAllOfType('topping').subscribe((data: IIngredient[]) => {\n      for (const iIngredient of data) {\n        this._toppings.push(new Ingredient(iIngredient));\n      }\n    });\n    this.server.getAllOfType('frosting').subscribe(\n      (data: IIngredient[]) => {\n        for (const iIngredient of data) {\n          this._frostings.push(new Ingredient(iIngredient));\n        }\n      });\n    this.server.getAllOfType('crust').subscribe(\n      (data: IIngredient[]) => {\n        for (const iIngredient of data) {\n          this._crusts.push(new Ingredient(iIngredient));\n        }\n      });\n  }\n\n  ngOnInit(): void { }\n\n  addToCart() {\n    // Converting toppings into interfaces\n    let toppingInterfaces: IIngredient[] = [];\n    for (const ingredient of this._toppings.filter(i => i.selected)) {\n      toppingInterfaces.push(ingredient.convertToInterface());\n    }\n    // Adding pizza to cart\n    this.cart.addPizza(this.selectedCrust.convertToInterface(),\n                        this.selectedFrosting.convertToInterface(),\n                        toppingInterfaces);\n  }\n\n  chooseFrosting(chosenFrosting: Ingredient) {\n    this.selectedFrosting = chosenFrosting;\n  }\n\n  chooseCrust(chosenCrust: Ingredient) {\n    this.selectedCrust = chosenCrust;\n  }\n}\n\n\n\n","<h1>Create Your Pizza</h1>\n<div class=\"pizza-form\">\n  <h1 class=\"type-name\">Toppings</h1>\n  <div class=\"topping\" *ngFor=\"let ingr of _toppings\">\n    <label>\n      <input type=\"checkbox\" [(ngModel)]=\"ingr.selected\">\n      {{ingr.name}}\n    </label>\n  </div>\n  <div class=\"type-wrapper\">\n    <h1 class=\"type-name\">Frosting</h1>\n    <div class=\"topping\" *ngFor=\"let ingr of _frostings; index as i\">\n      <label>\n        <input type=\"radio\" name=\"frosting\" [checked]=\"i === 0\" (change)=\"chooseFrosting(ingr)\">\n        {{ingr.name}}\n      </label>\n    </div>\n  </div>\n  <div class=\"type-wrapper\">\n    <h1 class=\"type-name\">Crust</h1>\n    <div class=\"topping\" *ngFor=\"let ingr of _crusts; index as i\">\n      <label>\n        <input type=\"radio\" name=\"crust\" [checked]=\"i === 0\" (change)=\"chooseCrust(ingr)\">\n        {{ingr.name}}\n      </label>\n    </div>\n  </div>\n  <button (click)=\"addToCart()\">Add to Cart</button>\n</div>\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}